### YamlMime:ManagedReference
items:
- uid: Datos.Repositorys.MonitorRepository
  commentId: T:Datos.Repositorys.MonitorRepository
  id: MonitorRepository
  parent: Datos.Repositorys
  children:
  - Datos.Repositorys.MonitorRepository.AltaMonitor(Datos.Infrastructure.Monitor)
  - Datos.Repositorys.MonitorRepository.ObtenerMonitores
  - Datos.Repositorys.MonitorRepository.ObtenerMonitorPorDni(System.String)
  langs:
  - csharp
  - vb
  name: MonitorRepository
  nameWithType: MonitorRepository
  fullName: Datos.Repositorys.MonitorRepository
  type: Class
  source:
    id: MonitorRepository
    path: E:\MULWEB 2\DesInt\EquipoB\DI_EquipoB\Datos\Repositorys\MonitorRepository.cs
    startLine: 9
  assemblies:
  - Datos
  namespace: Datos.Repositorys
  syntax:
    content: public class MonitorRepository
    content.vb: Public Class MonitorRepository
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Datos.Repositorys.MonitorRepository.ObtenerMonitores
  commentId: M:Datos.Repositorys.MonitorRepository.ObtenerMonitores
  id: ObtenerMonitores
  parent: Datos.Repositorys.MonitorRepository
  langs:
  - csharp
  - vb
  name: ObtenerMonitores()
  nameWithType: MonitorRepository.ObtenerMonitores()
  fullName: Datos.Repositorys.MonitorRepository.ObtenerMonitores()
  type: Method
  source:
    id: ObtenerMonitores
    path: E:\MULWEB 2\DesInt\EquipoB\DI_EquipoB\Datos\Repositorys\MonitorRepository.cs
    startLine: 11
  assemblies:
  - Datos
  namespace: Datos.Repositorys
  syntax:
    content: public List<Usuario> ObtenerMonitores()
    return:
      type: System.Collections.Generic.List{Datos.Infrastructure.Usuario}
    content.vb: Public Function ObtenerMonitores As List(Of Usuario)
  overload: Datos.Repositorys.MonitorRepository.ObtenerMonitores*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Datos.Repositorys.MonitorRepository.ObtenerMonitorPorDni(System.String)
  commentId: M:Datos.Repositorys.MonitorRepository.ObtenerMonitorPorDni(System.String)
  id: ObtenerMonitorPorDni(System.String)
  parent: Datos.Repositorys.MonitorRepository
  langs:
  - csharp
  - vb
  name: ObtenerMonitorPorDni(String)
  nameWithType: MonitorRepository.ObtenerMonitorPorDni(String)
  fullName: Datos.Repositorys.MonitorRepository.ObtenerMonitorPorDni(System.String)
  type: Method
  source:
    id: ObtenerMonitorPorDni
    path: E:\MULWEB 2\DesInt\EquipoB\DI_EquipoB\Datos\Repositorys\MonitorRepository.cs
    startLine: 28
  assemblies:
  - Datos
  namespace: Datos.Repositorys
  summary: "\nRegistra un nuevo usuario en la base de datos.\n"
  example: []
  syntax:
    content: public Monitor ObtenerMonitorPorDni(string dni)
    parameters:
    - id: dni
      type: System.String
    return:
      type: Datos.Infrastructure.Monitor
      description: Mensaje de confirmación de que el usuario fue añadido con éxito.
    content.vb: Public Function ObtenerMonitorPorDni(dni As String) As Monitor
  overload: Datos.Repositorys.MonitorRepository.ObtenerMonitorPorDni*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Datos.Repositorys.MonitorRepository.AltaMonitor(Datos.Infrastructure.Monitor)
  commentId: M:Datos.Repositorys.MonitorRepository.AltaMonitor(Datos.Infrastructure.Monitor)
  id: AltaMonitor(Datos.Infrastructure.Monitor)
  parent: Datos.Repositorys.MonitorRepository
  langs:
  - csharp
  - vb
  name: AltaMonitor(Monitor)
  nameWithType: MonitorRepository.AltaMonitor(Monitor)
  fullName: Datos.Repositorys.MonitorRepository.AltaMonitor(Datos.Infrastructure.Monitor)
  type: Method
  source:
    id: AltaMonitor
    path: E:\MULWEB 2\DesInt\EquipoB\DI_EquipoB\Datos\Repositorys\MonitorRepository.cs
    startLine: 37
  assemblies:
  - Datos
  namespace: Datos.Repositorys
  syntax:
    content: public string AltaMonitor(Monitor monitor)
    parameters:
    - id: monitor
      type: Datos.Infrastructure.Monitor
    return:
      type: System.String
    content.vb: Public Function AltaMonitor(monitor As Monitor) As String
  overload: Datos.Repositorys.MonitorRepository.AltaMonitor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Datos.Repositorys
  commentId: N:Datos.Repositorys
  name: Datos.Repositorys
  nameWithType: Datos.Repositorys
  fullName: Datos.Repositorys
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Datos.Repositorys.MonitorRepository.ObtenerMonitores*
  commentId: Overload:Datos.Repositorys.MonitorRepository.ObtenerMonitores
  name: ObtenerMonitores
  nameWithType: MonitorRepository.ObtenerMonitores
  fullName: Datos.Repositorys.MonitorRepository.ObtenerMonitores
- uid: System.Collections.Generic.List{Datos.Infrastructure.Usuario}
  commentId: T:System.Collections.Generic.List{Datos.Infrastructure.Usuario}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Usuario>
  nameWithType: List<Usuario>
  fullName: System.Collections.Generic.List<Datos.Infrastructure.Usuario>
  nameWithType.vb: List(Of Usuario)
  fullName.vb: System.Collections.Generic.List(Of Datos.Infrastructure.Usuario)
  name.vb: List(Of Usuario)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Datos.Infrastructure.Usuario
    name: Usuario
    nameWithType: Usuario
    fullName: Datos.Infrastructure.Usuario
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Datos.Infrastructure.Usuario
    name: Usuario
    nameWithType: Usuario
    fullName: Datos.Infrastructure.Usuario
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Datos.Infrastructure.Usuario
  commentId: T:Datos.Infrastructure.Usuario
  parent: Datos.Infrastructure
  name: Usuario
  nameWithType: Usuario
  fullName: Datos.Infrastructure.Usuario
- uid: Datos.Repositorys.MonitorRepository.ObtenerMonitorPorDni*
  commentId: Overload:Datos.Repositorys.MonitorRepository.ObtenerMonitorPorDni
  name: ObtenerMonitorPorDni
  nameWithType: MonitorRepository.ObtenerMonitorPorDni
  fullName: Datos.Repositorys.MonitorRepository.ObtenerMonitorPorDni
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Datos.Infrastructure.Monitor
  commentId: T:Datos.Infrastructure.Monitor
  parent: Datos.Infrastructure
  name: Monitor
  nameWithType: Monitor
  fullName: Datos.Infrastructure.Monitor
- uid: Datos.Infrastructure
  commentId: N:Datos.Infrastructure
  name: Datos.Infrastructure
  nameWithType: Datos.Infrastructure
  fullName: Datos.Infrastructure
- uid: Datos.Repositorys.MonitorRepository.AltaMonitor*
  commentId: Overload:Datos.Repositorys.MonitorRepository.AltaMonitor
  name: AltaMonitor
  nameWithType: MonitorRepository.AltaMonitor
  fullName: Datos.Repositorys.MonitorRepository.AltaMonitor
